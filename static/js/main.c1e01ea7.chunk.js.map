{"version":3,"sources":["img/svg/001-emoji.svg","img/svg/002-emoji-1.svg","img/svg/003-emoji-2.svg","img/svg/004-sad.svg","img/svg/005-emoji-3.svg","img/svg/006-emoji-4.svg","img/svg/007-emoji-5.svg","img/svg/008-emoji-6.svg","img/svg/like.svg","img/svg/dislike-thumb.svg","Helpers.js","components/Sidebar.jsx","components/Joke.jsx","components/JokesContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","makeRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","request","response","wrap","_context","prev","next","fetch","method","headers","Accept","sent","json","abrupt","stop","_x","apply","this","arguments","Sidebar","props","handleReload","jokes","i","loading","then","data","push","objectSpread","score","localStorage","setItem","JSON","stringify","reloadJokes","react_default","createElement","className","src","alt","onClick","Joke","state","rate","_this","thumbUp","setState","setTimeout","st","setScore","id","thumbDown","chooseImg","emojiCry","emojiLaugh2","emoji2Laugh","emojiHappy","emojiNormal","emojiMeh","emojiAnger","emojiFurious","chooseBorder","concat","text","Component","defaultProps","JokesContainer","react_flip_move_es","map","joke","Joke_Joke","key","loader","App","bool","scored","getItem","parse","sorted","sort","b","Sidebar_Sidebar","JokesContainer_JokesContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1e01ea7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/001-emoji.1241b82b.svg\";","module.exports = __webpack_public_path__ + \"static/media/002-emoji-1.a8b7f5f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/003-emoji-2.d310fc7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/004-sad.acfd2d8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/005-emoji-3.b4a99b89.svg\";","module.exports = __webpack_public_path__ + \"static/media/006-emoji-4.5cf827db.svg\";","module.exports = __webpack_public_path__ + \"static/media/007-emoji-5.bce964bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/008-emoji-6.4cea71af.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.9d0356f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/dislike-thumb.45045e34.svg\";","import fetch from 'node-fetch';\r\n\r\nconst makeRequest = async function(url) {\r\n  const request = await fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json'\r\n    }\r\n  });\r\n  const response = await request.json();\r\n  return response;\r\n};\r\n\r\nexport { makeRequest };\r\n","import React from 'react';\r\nimport './css/Sidebar.css';\r\nimport { makeRequest } from '../Helpers';\r\n\r\nexport default function Sidebar(props) {\r\n  const handleReload = async () => {\r\n    props.loading(true);\r\n\r\n    const jokes = [];\r\n\r\n    let i = 0;\r\n\r\n    while (i <= 10) {\r\n      const request = makeRequest('https://icanhazdadjoke.com/');\r\n      await request.then(data => {\r\n        jokes.push({ ...data, score: 0 });\r\n      });\r\n      i++;\r\n    }\r\n\r\n    localStorage.setItem('jokes', JSON.stringify(jokes));\r\n    props.reloadJokes(jokes);\r\n    props.loading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Sidebar\">\r\n      <h1 className=\"Sidebar-title\">\r\n        Dad <span>Jokes</span>\r\n      </h1>\r\n\r\n      <div className=\"Sidebar-img-container\">\r\n        <img\r\n          className=\"Sidebar-img\"\r\n          src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\"\r\n          alt=\"Amix\"\r\n        />\r\n      </div>\r\n\r\n      <button className=\"Sidebar-button\" onClick={handleReload}>\r\n        New Jokes\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './css/Joke.css';\r\nimport emojiCry from '../img/svg/001-emoji.svg';\r\nimport emoji2Laugh from '../img/svg/002-emoji-1.svg';\r\nimport emojiLaugh2 from '../img/svg/003-emoji-2.svg';\r\nimport emojiMeh from '../img/svg/004-sad.svg';\r\nimport emojiFurious from '../img/svg/005-emoji-3.svg';\r\nimport emojiAnger from '../img/svg/006-emoji-4.svg';\r\nimport emojiHappy from '../img/svg/007-emoji-5.svg';\r\nimport emojiNormal from '../img/svg/008-emoji-6.svg';\r\nimport thumbUp from '../img/svg/like.svg';\r\nimport thumbDown from '../img/svg/dislike-thumb.svg';\r\nimport { setTimeout } from 'timers';\r\n\r\nexport default class Joke extends Component {\r\n  state = {\r\n    rate: this.props.score,\r\n    loading: false\r\n  };\r\n\r\n  static defaultProps = {\r\n    text:\r\n      'My dog used to chase people on a bike a lot. It got so bad I had to take his bike away.'\r\n  };\r\n\r\n  thumbUp = () => {\r\n    this.setState({ loading: true });\r\n\r\n    setTimeout(() => {\r\n      this.setState(st => {\r\n        if (st.rate >= 15) {\r\n          return { rate: 15, loading: false };\r\n        } else {\r\n          return { rate: (st.rate += 1), loading: false };\r\n        }\r\n      });\r\n\r\n      this.props.setScore(this.props.id, this.state.rate + 1);\r\n    }, 300);\r\n  };\r\n\r\n  thumbDown = () => {\r\n    this.setState(() => ({ loading: true }));\r\n\r\n    setTimeout(() => {\r\n      this.setState(st => {\r\n        if (st.rate <= -15) {\r\n          return { rate: -15, loading: false };\r\n        } else {\r\n          return { rate: (st.rate -= 1), loading: false };\r\n        }\r\n      });\r\n\r\n      this.props.setScore(this.props.id, this.state.rate - 1);\r\n    }, 300);\r\n  };\r\n\r\n  chooseImg = () => {\r\n    const { rate } = this.state;\r\n    if (rate >= 12) {\r\n      return emojiCry;\r\n    } else if (rate >= 10) {\r\n      return emojiLaugh2;\r\n    } else if (rate >= 6) {\r\n      return emoji2Laugh;\r\n    } else if (rate >= 4) {\r\n      return emojiHappy;\r\n    } else if (rate > 0) {\r\n      return emojiNormal;\r\n    } else if (rate === 0) {\r\n      return emojiMeh;\r\n    } else if (rate <= -4) {\r\n      return emojiAnger;\r\n    } else {\r\n      return emojiFurious;\r\n    }\r\n  };\r\n\r\n  chooseBorder = () => {\r\n    const { rate } = this.state;\r\n    if (rate >= 12) {\r\n      return 'rate-12';\r\n    } else if (rate >= 10) {\r\n      return 'rate-10';\r\n    } else if (rate >= 6) {\r\n      return 'rate-6';\r\n    } else if (rate >= 4) {\r\n      return 'rate-4';\r\n    } else if (rate > 0) {\r\n      return 'rate-4';\r\n    } else if (rate === 0) {\r\n      return 'rate-0';\r\n    } else if (rate <= -4) {\r\n      return 'rate-neg-4';\r\n    } else {\r\n      return 'rate-neg-15';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Joke\">\r\n        <div className=\"Joke-rate\">\r\n          <img\r\n            src={thumbUp}\r\n            className=\"Joke-rate-button\"\r\n            onClick={this.thumbUp}\r\n            alt=\"Joke-rate-button\"\r\n          />\r\n\r\n          <p className={`Joke-rate-text ${this.chooseBorder()}`}>\r\n            {this.state.rate}\r\n          </p>\r\n\r\n          <img\r\n            src={thumbDown}\r\n            className=\"Joke-rate-button\"\r\n            onClick={this.thumbDown}\r\n            alt=\"Joke-rate-button\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"Joke-text\">{this.props.text}</div>\r\n\r\n        <div className=\"Joke-emoji\">\r\n          <img\r\n            className={`${this.state.loading && 'loadingSpin'}`}\r\n            src={this.chooseImg()}\r\n            alt=\"Emoji\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Joke from './Joke';\r\nimport './css/JokesContainer.css';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nexport default class JokesContainer extends Component {\r\n  render() {\r\n    const jokes = (\r\n      <FlipMove>\r\n        {this.props.jokes.map(joke => (\r\n          <Joke\r\n            key={joke.id}\r\n            id={joke.id}\r\n            text={joke.joke}\r\n            setScore={this.props.setScore}\r\n            score={joke.score}\r\n          />\r\n        ))}\r\n      </FlipMove>\r\n    );\r\n\r\n    const loader = (\r\n      <div className=\"lds-circle\">\r\n        <div />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={`JokesContainer ${this.props.loading && 'loading'}`}>\r\n        {this.props.loading ? loader : jokes}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { makeRequest } from './Helpers';\nimport Sidebar from './components/Sidebar';\nimport JokesContainer from './components/JokesContainer';\n\nclass App extends Component {\n  state = {\n    jokes: [],\n    loading: false\n  };\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n\n    if (localStorage.getItem('jokes')) {\n      const jokes = localStorage.getItem('jokes');\n      this.setState({ jokes: JSON.parse(jokes), loading: false });\n      return;\n    }\n\n    const jokes = [];\n\n    let i = 0;\n\n    while (i <= 10) {\n      const request = makeRequest('https://icanhazdadjoke.com/');\n      await request.then(data => {\n        jokes.push({ ...data, score: 0 });\n      });\n      i++;\n    }\n\n    localStorage.setItem('jokes', JSON.stringify(jokes));\n\n    this.setState({ jokes, loading: false });\n  }\n\n  loading = bool => {\n    this.setState({ loading: bool });\n  };\n\n  reloadJokes = data => {\n    this.setState({ jokes: data, loading: false });\n  };\n\n  setScore = (id, score) => {\n    this.setState(st => {\n      const scored = st.jokes.map(joke => {\n        if (joke.id === id) {\n          joke.score = score;\n          return joke;\n        }\n        return joke;\n      });\n\n      localStorage.setItem('jokes', JSON.stringify(scored));\n      return { jokes: scored };\n    });\n  };\n\n  render() {\n    const sorted = this.state.jokes.sort((a, b) => {\n      return b.score - a.score;\n    });\n\n    return (\n      <div className=\"App\">\n        <Sidebar reloadJokes={this.reloadJokes} loading={this.loading} />\n\n        <JokesContainer\n          jokes={sorted}\n          loading={this.state.loading}\n          setScore={this.setScore}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}